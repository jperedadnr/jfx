pipeline {
    agent any

    tools {
        jdk 'openjdk-15'
    }

    environment {
        TOOLCHAIN_DIR = '/opt/aarch64-linux/aarch64'
        PKG_CONFIG_SYSROOT_DIR = '/opt/aarch64-linux/aarch64'
        PKG_CONFIG_LIBDIR = '/opt/aarch64-linux/aarch64/usr/lib/aarch64-linux-gnu/pkgconfig:/opt/aarch64-linux/aarch64/usr/share/pkgconfig'
    }

    stages {
        stage('Clone repository (branch)') {
            when {
                anyOf {
                    environment name: 'PROMOTED_BUILD_NUMBER', value: '0'
                    not {
                        environment name: 'BRANCH', value: 'build'
                    }
                }
            }
            steps {
                sh "echo STEP 1"
                checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: "git@github.com:${env.REPO}.git", credentialsId: 'github-account-tiainen']], branches: [[name: "${env.BRANCH}"]]], poll: false
            }    
        }

        stage('Clone repository (promoted tag)') {
            when {
                allOf {
                    environment name: 'BRANCH', value: 'build'
                    not {
                        environment name: 'PROMOTED_BUILD_NUMBER', value: '0'
                    }
                }
            }
            steps {
                checkout scm: [$class: 'GitSCM', userRemoteConfigs: [[url: "git@github.com:${env.REPO}.git", credentialsId: 'github-account-tiainen']], branches: [[name: "${env.MAJOR_VERSION}+${env.PROMOTED_BUILD_NUMBER}-gluon"]]], poll: false
            }    
        }

        stage('Clean repository') {
            steps {
                sh "git clean -d -x -f"
            }
        }

        stage('Gradle dynamic build') {
            steps {
                sh "sh gradlew --no-daemon --info --refresh-dependencies -PPROMOTED_BUILD_NUMBER=${env.PROMOTED_BUILD_NUMBER} -PCOMPILE_MEDIA=false -PCOMPILE_TARGETS=linux_aarch64 -PTOOLCHAINDIR=${env.TOOLCHAIN_DIR} clean all"
            }
        }

        stage('Add dyn DRM lib') {
            when {
                not {
                    environment name: 'GLUON_DRM_VERSION', value: ''
                }
            }
            steps {
                sh "echo adddrm 1"
                sh "scp root@download2.gluonhq.com:/var/www/html/restricted/openjfx/drm/lib-${GLUON_DRM_VERSION}/aarch64/libgluon_drm.so build/linux_aarch64-sdk/lib/libgluon_drm-${GLUON_DRM_VERSION}.so"
                sh "echo adddrm 2"
                sh "echo adddrm 3"
            }
        }

        stage('Create dynamic zip') {
            steps {
                sh "echo zip 1"
                sh "mv build/linux_aarch64-sdk build/sdk"
                sh "echo zip 2"
                sh "cd build && zip -r ../openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64.zip sdk"
                sh "echo zip 3"
            }
        }

        stage('Gradle static build') {
            steps {
                sh "sh gradlew --no-daemon --info --refresh-dependencies -PPROMOTED_BUILD_NUMBER=${env.PROMOTED_BUILD_NUMBER} -PCOMPILE_MEDIA=false -PSTATIC_BUILD=true -PCOMPILE_TARGETS=linux_aarch64 -PTOOLCHAINDIR=${env.TOOLCHAIN_DIR} clean all"
            }
        }

        stage('Add DRM lib') {
            when {
                not {
                    environment name: 'GLUON_DRM_VERSION', value: ''
                }
            }
            steps {
                sh "scp root@download2.gluonhq.com:/var/www/html/restricted/openjfx/drm/lib-${GLUON_DRM_VERSION}/aarch64/libgluon_drm.a build/linux_aarch64-sdk/lib/libgluon_drm.a"
            }
        }

        stage('Rename artifacts') {
            steps {
                sh "cp build/linux_aarch64-sdk/lib/javafx.base.jar build/linux_aarch64-sdk/lib/javafx-base.jar"
                sh "cp build/linux_aarch64-sdk/lib/javafx.controls.jar build/linux_aarch64-sdk/lib/javafx-controls.jar"
                sh "cp build/linux_aarch64-sdk/lib/javafx.fxml.jar build/linux_aarch64-sdk/lib/javafx-fxml.jar"
                sh "cp build/linux_aarch64-sdk/lib/javafx.graphics.jar build/linux_aarch64-sdk/lib/javafx-graphics.jar"
                sh "mv build/linux_aarch64-sdk build/sdk"
            }
        }
    
        stage('Create static zip') {
            steps {
                sh "cd build && zip -r ../openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64-static.zip sdk"
            }
        }

        stage('Upload zip (branch)') {
            when {
                anyOf {
                    environment name: 'PROMOTED_BUILD_NUMBER', value: '0'
                    not {
                        environment name: 'BRANCH', value: 'build'
                    }
                }
            }
            steps {
                sh "scp openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64.zip root@download2.gluonhq.com:/var/www/html/openjfx/${MAJOR_VERSION}/openjfx-${env.MAJOR_VERSION}-${env.BUILD_TIMESTAMP}-linux-aarch64.zip"
                sh "scp openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64-static.zip root@download2.gluonhq.com:/var/www/html/substrate/javafxstaticsdk/openjfx-${env.MAJOR_VERSION}-${env.BUILD_TIMESTAMP}-linux-aarch64-static.zip"
            }
        }

        stage('Upload zip (promoted)') {
            when {
                allOf {
                    environment name: 'BRANCH', value: 'build'
                    not {
                        environment name: 'PROMOTED_BUILD_NUMBER', value: '0'
                    }
                }
            }
            steps {
                sh "scp openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64-static.zip root@download2.gluonhq.com:/var/www/html/substrate/javafxstaticsdk"
                sh "scp openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64-static.zip root@download2.gluonhq.com:/var/www/html/substrate/javafxstaticsdk/openjfx-${env.MAJOR_VERSION}-latest-linux-aarch64-static.zip"
                sh "scp openjfx-${env.MAJOR_VERSION}-ea+gvm${env.PROMOTED_BUILD_NUMBER}-linux-aarch64.zip root@download2.gluonhq.com:/var/www/html/openjfx/${env.MAJOR_VERSION}/openjfx-${env.MAJOR_VERSION}-ea+${env.JFX_PROMOTED_BUILD_NUMBER}-linux-aarch64.zip"
            }
        }
    }
}
